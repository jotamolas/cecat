<?php

namespace AppBundle\Repository;

/**
 * RenaperQuerRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RenaperQueryRepository extends \Doctrine\ORM\EntityRepository {

    public function findByNotary(\AppBundle\Entity\Notary $notary) {

        $transactions = $notary->getTransactions();

        $qb = $this->createQueryBuilder('renaq');
        $qb->where("renaq.transaction IN(:transactions)")
                ->setParameter('transactions', $transactions);

        return $qb->getQuery()->getResult();
    }

    public function findBetweenDates(\DateTime $from, \DateTime $to) {

        $qb = $this->createQueryBuilder('renaq');
        $qb
                ->leftJoin('renaq.transaction', 't')
                ->where($qb->expr()->between('t.createdAt', ':date_from', ':date_to'))
                ->setParameter('date_from', $from)
                ->setParameter('date_to', $to)
        ;

        return  $qb->getQuery()->getResult()   ;
    }

    public function getSumAmmountBetweenDates(\DateTime $from, \DateTime $to) {
        $qb = $this->createQueryBuilder('renaq');
        $qb
                ->select('SUM(t.ammount) as Credits, COUNT(t.id) as Queries')
                ->leftJoin('renaq.transaction', 't')
                ->where($qb->expr()->between('t.createdAt', ':date_from', ':date_to'))
                ->setParameter('date_from', $from)
                ->setParameter('date_to', $to)
        ;

        return $qb->getQuery()->getResult();
    }

}
