# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    app.form.registration:
        class: AppBundle\Form\RegistrationType
        tags:
            - { name: form.type, alias: app_user_registration }
    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'
    
    account.service:
        public: true
        class: AppBundle\Service\AccountService
        arguments: ["@doctrine.orm.entity_manager", "@service_container"]
        
    action.service:
        public: true
        class: AppBundle\Service\ActionService
        arguments: ["@doctrine.orm.entity_manager", "@service_container"]
    
    notary.service:
        public: true
        class: AppBundle\Service\NotaryService
        arguments: ["@doctrine.orm.entity_manager", "@service_container"]

    person.service:
        public: true
        class: AppBundle\Service\PersonService
        arguments: ["@doctrine.orm.entity_manager", "@service_container"]
        
        
    validator.validate.credits:
        class: AppBundle\Validator\Constraints\ValidateCreditsValidator
        arguments: ["@doctrine.orm.entity_manager"]
        tags:
        - { name: validator.constraint_validator, alias: validate.credits}
        
    cecat.security.component.authentication.handler.login_success_handler:
        public: true
        class: AppBundle\Component\Authentication\Handler\LoginSuccessHandler
        arguments: ["@router", "@security.authorization_checker"]
        